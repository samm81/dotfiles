# basic config
# 1 is easier to switch to than 0
set -g base-index 1
setw -g pane-base-index 1
# moar history
set-option -g history-limit 50000
# not C-b, which interferes with `readline`
set -g prefix C-q
# Cycle panes with C-q C-q
#unbind ^Q
#bind ^Q select-pane -t :.+
# 256 colors please
#set -g default-terminal 'tmux-256color'
set -g default-terminal 'screen-256color'
# hmm this messes things up, default to `xterm` for now
#set -g default-terminal 'xterm-256color'

# actually use my shell...
set-option -g default-command "$SHELL"

# act like vim
set-window-option -g mode-keys vi
setw -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
#bind-key -r C-h select-window -t :-
#bind-key -r C-l select-window -t :+
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-selection

# scroll text, not commands, select text within panes
set-option -g mouse off

# fast escape
set-option -g escape-time 0

# I can't read messages in 750ms
set-option -g display-time 2000

# don't die when I leave
set-option -g exit-unattached off

if-shell -b "[ ! -z $TMUX_MAIN_PANE_WIDTH ]" " \
  set-option -g main-pane-width $TMUX_MAIN_PANE_WIDTH ; "

# rapid reload
bind-key r source-file ~/.tmux.conf \; \
  display-message '.tmux.conf reloaded!'

# focus events (for vim)
set -g focus-events on

set-option -g update-environment \
  "SSH_AUTH_SOCK \
  SSH_AGENT_PID \
  DISPLAY \
  SWAYSOCK \
  DBUS_SESSION_ADDRESS \
  I3SOCK"

# powerline
#run-shell "tmux setenv -g PIP $(command -v pip || command -v pip3 || echo \"''\")"
#run-shell "tmux setenv -g POWERLINE_PACKAGE_LOCATION $(${PIP} show powerline-status | awk '/Location/ {print $2}' | echo \"''\")"
#run-shell "tmux setenv -g POWERLINE_CONF_POSTFIX '/powerline/bindings/tmux/powerline.conf'"
#run-shell "tmux setenv -g POWERLINE_CONF '${POWERLINE_PACKAGE_LOCATION}${POWERLINE_CONF_POSTFIX}'"
#if-shell -b "[ ! -z ${POWERLINE_PACKAGE_LOCATION} ]" ' \
#  run-shell "tmux source-file $POWERLINE_CONF" ; \
#  run-shell "powerline-daemon -q || true" ; '

#### Tmux Plugin Manager ####
# prefix + I to install
#set -g @tpm_plugins '\
#  tmux-plugins/tpm \
#'
# tmux-plugins/tmux-urlview
# tmux-plugins/tmux-yank
# tmux-plugins/tmux-sensible


# @resurrect-processes ':all:' restores *all* running processes
# see https://github.com/tmux-plugins/tmux-resurrect/blob/master/docs/restoring_programs.md
#set -g @resurrect-processes ':all:'
#    "~jekyll serve->bundle exec jekyll serve"

# tmux continuum
# @resurrect-strategy-vim 'session' goes well with vim-obsession
#if-shell "[ ! -z ${TMUX_CONTINUUM} ]" " \
#  set -g @plugin 'tmux-plugins/tmux-resurrect' ; \
#  set -g @plugin 'tmux-plugins/tmux-continuum' ; \
#  set -g @continuum-restore 'off' ; \
#  set -g @continuum-save-interval '5' ; \
#  set -g @resurrect-strategy-vim 'session' ; "

#NO_PLUGINS=' \
#  display-message -p "tmux plugins are not installed!" ; \
#  display-message -p "please press Leader I to install" ; \
#  set-hook -gu session-created ; '
#PLUGINS=' \
#  display-message -p "first start of tmux server" ; \
#  display-message -p "reminder of continuum status" ; \
#  show-options -g @continuum-restore ; \
#  show-options -g @continuum-save-interval ; \
#  set-hook -gu session-created ; \
#  display-message -p "Leader C-r to resurrect" ; '
#if-shell "[ ! -d ${HOME}/.tmux ]" 'set-hook -g session-created ${NO_PLUGINS}' 'set-hook -g session-created ${PLUGINS}'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
#run -b '~/.tmux/plugins/tpm/tpm'
