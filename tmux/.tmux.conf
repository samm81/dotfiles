# basic config
# 1 is easier to switch to than 0
set -g base-index 1
setw -g pane-base-index 1
# moar history
set-option -g history-limit 10000
# not C-b
set -g prefix C-q
# Cycle panes with C-q C-q
unbind ^Q
bind ^Q select-pane -t :.+
# 256 colors please
set -g default-terminal "screen-256color"

# tmux developers inexplicably updated syntax with breaking changes
# solution from https://github.com/tmux/tmux/issues/754

# based on https://stackoverflow.com/a/40902312/1046584
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"

# In version 2.1 "mouse" replaced the previous 4 mouse options
#if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1 ]' \
#  "set -g mouse on"

# UTF8 is autodetected in 2.2 onwards, but errors if explicitly set
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.2" | bc)" = 1 ]' \
  "set -g utf8 on; set -g status-utf8 on; "
#set -g mouse-utf8 on"

# New keybindings for vi-mode
# https://github.com/tmux/tmux/issues/754
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
   'bind -T copy-mode-vi v send-keys -X begin-selection ; \
   bind -T copy-mode-vi C-v send-keys -X rectangle-toggle ; \
   bind -T copy-mode-vi y send-keys -X copy-selection ; \
   bind -T copy-mode-vi H send-keys -X start-of-line ; \
   bind -T copy-mode-vi L send-keys -X end-of-line ; \
   bind -T choice-mode-vi h send-keys -X tree-collapse ; \
   bind -T choice-mode-vi l send-keys -X tree-expand ; \
   bind -T choice-mode-vi H send-keys -X tree-collapse-all ; \
   bind -T choice-mode-vi L send-keys -X tree-expand-all ; ' \
   'bind -t vi-copy v begin-selection; \
   bind -t vi-copy C-v rectangle-toggle; \
   bind -t vi-copy y copy-selection; \
   bind -t vi-choice h tree-collapse; \
   bind -t vi-choice l tree-expand; \
   bind -t vi-choice H tree-collapse-all; \
   bind -t vi-choice L tree-expand-all; ' \

# actually use my shell...
set-option -g default-shell ${SHELL}

# act like vim
set-window-option -g mode-keys vi
setw -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+
# replaced above
#bind-key -t vi-copy v begin-selection
#bind-key -t vi-copy y copy-selection

# fast escape
set-option -g escape-time 0

# I can't read messaged in 750ms
set-option -g display-time 2000

# don't die when I leave
set-option -g exit-unattached off

# rapid reload
bind-key r source-file ~/.tmux.conf \; \
  display-message ".tmux.conf reloaded!"

# powerline
run-shell "tmux setenv -g PIP $(command -v pip || command -v pip3 || echo '')"
run-shell "tmux setenv -g PPL $(${PIP} show powerline-status)"
run-shell "tmux setenv -g POWERLINE_PACKAGE_LOCATION $(${PIP} show powerline-status | awk '/Location/ {print $2}')"
run-shell "tmux setenv -g POWERLINE_CONF_POSTFIX '/powerline/bindings/tmux/powerline.conf'"
run-shell "tmux setenv -g POWERLINE_CONF '${POWERLINE_PACKAGE_LOCATION}${POWERLINE_CONF_POSTFIX}'"
if-shell -b "[ ! -z ${POWERLINE_PACKAGE_LOCATION} ]" \
  'run-shell "tmux source-file $POWERLINE_CONF" ; \
  run-shell "powerline-daemon -q || true" ; '

#### Tmux Plugin Manager ####
# prefix + I to install
set -g @plugin 'tmux-plugins/tpm'
#set -g @plugin 'tmux-plugins/tmux-urlview'
#set -g @plugin 'tmux-plugins/tmux-yank'
#set -g @plugin 'tmux-plugins/tmux-sensible'

# tmux continuum
# @ressurrect-strategy-vim 'session' goes well with vim-obsession
if-shell "[ ! -z ${TMUX_CONTINUUM} ]" \
  "set -g @plugin 'tmux-plugins/tmux-resurrect' ; \
  set -g @plugin 'tmux-plugins/tmux-continuum' ; \
  set -g @continuum-restore 'on' ; \
  set -g @continuum-save-interval '5' ; \
  set -g @resurrect-strategy-vim 'session' ; "

NO_PLUGINS=' \
  display-message -p "tmux plugins are not installed!" ; \
  display-message -p "please press Leader + I to install" ; \
  set-hook -gu session-created ; '
PLUGINS=' \
  display-message -p "first start of tmux server" ; \
  display-message -p "reminder of continuum status" ; \
  show-options -g @continuum-restore ; \
  show-options -g @continuum-save-interval ; \
  set-hook -gu session-created ; '
if-shell "[ ! -d ${HOME}/.tmux ]" 'set-hook -g session-created ${NO_PLUGINS}' 'set-hook -g session-created ${PLUGINS}'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
