extends sh

snippet strict "unnofficial strict mode for bash > 4.3; redsymbol.net"
	#!/usr/bin/env bash
	# unofficial strict mode
	# note bash<=4.3 chokes on empty arrays with set -o nounset
	# http://redsymbol.net/articles/unofficial-bash-strict-mode/
	# https://sharats.me/posts/shell-script-best-practices/
	set -o errexit
	set -o nounset
	set -o pipefail

	IFS=$'\n\t'
	shopt -s nullglob globstar

	[[ "\${TRACE:-0}" == "1" ]] && set -o xtrace

	usage() {
		local filename
		filename="$(basename "\$0")"
		echo "Usage: ./\${filename} <arg one> <arg two>

	This is an awesome bash script to make your life better."
		exit
	}

	[[ "\${1:-}" =~ ^-*h(elp)?$ ]] && usage

	cd "$(dirname "\$0")"

	main() {
		echo "\${1:?missing arg}"
	}

	main "$@"

	exit 0

snippet help "easy help flag"
	if [[ "\${1-}" =~ ^-*h(elp)?$ ]]; then
			echo 'Usage: ./script.sh arg-one arg-two

	This is an awesome bash script to make your life better.

	'
			exit
	fi

snippet colors "bash color helpers"
	set +e
	# use colors, but only if connected to a terminal that supports them
	if which tput >/dev/null 2>&1; then
		ncolors=\$(tput colors)
	fi
	[ -t 1 ] && [ -n "\$ncolors" ] && [ "\$ncolors" -ge 8 ]
	has_colors=$?
	set -e

	RED="$( (( has_colors == 0 )) && tput setaf 1 || echo '' )"
	GREEN="$( (( has_colors == 0 )) && tput setaf 2 || echo '' )"
	YELLOW="$( (( has_colors == 0 )) && tput setaf 3 || echo '' )"
	BLUE="$( (( has_colors == 0 )) && tput setaf 4 || echo '' )"
	BOLD="$( (( has_colors == 0 )) && tput bold || echo '' )"
	NORMAL="$( (( has_colors == 0 )) && tput sgr0 || echo '' )"

	info () {
			[[ -n \${1:-} ]] && echo "\${BLUE}\${1}\${NORMAL}" >&2
	}
	warn () {
			[[ -n \${1:-} ]] && echo "\${YELLOW}\${1}\${NORMAL}" >&2
	}
	success () {
			[[ -n \${1:-} ]] && echo "\${GREEN}\${1}\${NORMAL}" >&2
	}
	err () {
			[[ -n \${1:-} ]] && echo "\${RED}\${1}\${NORMAL}" >&2
	}
	fail () {
			[[ -n \${1:-} ]] && echo "\${BOLD}\${RED}\${1}\${NORMAL}" >&2
			exit "\${2:-1}"
	}

snippet args "arg parsing with a simple while loop"
	while true; do
		case "\$1" in
			'-1'|'--opt1') opt1="\$2"; shift 2 ;;
			'-2'|'--opt2') opt2="\$2"; shift 2 ;;
			*) default="\$1"; shift; break ;;
		esac
	done
